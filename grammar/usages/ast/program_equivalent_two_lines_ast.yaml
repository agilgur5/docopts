---
node: Root
children:
- node: Prologue
  children:
  - node: Prologue_node
    token: { type: WORD, value: "Equivalent" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "to:" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "program_with_alternative_one_line_without_parenthese.docopt" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
  - node: Prologue_node
    token: { type: WORD, value: "Both" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "should" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "generate" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "the" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "same" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "AST?" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "(for" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "error" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "handling" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "no," }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "because" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "the" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "syntax" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "is" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "diffrent" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "and" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "the" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "token" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "too)" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
  - node: Prologue_node
    token: { type: WORD, value: "In" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "original" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "docopt" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "it" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "was" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "normalized" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "first:" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "`FormalUsage(section" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "string)" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "(string," }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "error)`" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
- node: Usage_section
  children:
  - node: Usage
    token: { type: USAGE, value: "Usage:" }
  - node: Usage_line
    usage_line_input: "my_program run"
    children:
    - node: Prog_name
      token: { type: PROG_NAME, value: "my_program" }
    - node: Usage_Expr
      children:
      - node: Usage_command
        token: { type: IDENT, value: "run" }
  - node: Usage_line
    usage_line_input: "my_program jump"
    children:
    - node: Prog_name
      token: { type: PROG_NAME, value: "my_program" }
    - node: Usage_Expr
      children:
      - node: Usage_command
        token: { type: IDENT, value: "jump" }
- node: Free_section
- node: Options_section
- node: Free_section

---
node: Root
children:
- node: Prologue
  children:
  - node: Prologue_node
    token: { type: WORD, value: "This" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "is" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "input" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "for" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "unit" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "testing" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
- node: Usage_section
  children:
  - node: Usage
    token: { type: USAGE, value: "Usage:" }
  - node: Usage_line
    usage_line_input: "myprog -m <pipo>"
    children:
    - node: Prog_name
      token: { type: PROG_NAME, value: "myprog" }
    - node: Usage_Expr
      children:
      - node: Usage_short_option
        token: { type: SHORT, value: "-m" }
      - node: Usage_argument
        token: { type: ARGUMENT, value: "<pipo>" }
  - node: Usage_line
    usage_line_input: "myprog -A ARG"
    children:
    - node: Prog_name
      token: { type: PROG_NAME, value: "myprog" }
    - node: Usage_Expr
      children:
      - node: Usage_replaced
        children:
        - node: Option_alternative_group
          children:
          - node: Option_short
            token: { type: SHORT, value: "-A" }
            children:
            - node: Option_argument
              token: { type: ARGUMENT, value: "ARG" }
        - node: Usage_old
          children:
          - node: Usage_short_option
            token: { type: SHORT, value: "-A" }
          - node: Usage_argument
            token: { type: ARGUMENT, value: "ARG" }
  - node: Usage_line
    usage_line_input: "myprog -B BARG"
    children:
    - node: Prog_name
      token: { type: PROG_NAME, value: "myprog" }
    - node: Usage_Expr
      children:
      - node: Usage_replaced
        children:
        - node: Option_alternative_group
          children:
          - node: Option_short
            token: { type: SHORT, value: "-B" }
            children:
            - node: Option_argument
              token: { type: ARGUMENT, value: "BARG" }
          - node: Option_long
            token: { type: LONG, value: "--blong" }
            children:
            - node: Option_argument
              token: { type: ARGUMENT, value: "BARG" }
        - node: Usage_old
          children:
          - node: Usage_short_option
            token: { type: SHORT, value: "-B" }
          - node: Usage_argument
            token: { type: ARGUMENT, value: "BARG" }
- node: Free_section
- node: Options_section
  children:
  - node: Section_name
    token: { type: SECTION, value: "Options:" }
  - node: Option_line
    children:
    - node: Option_short
      token: { type: SHORT, value: "-m" }
    - node: Option_long
      token: { type: LONG, value: "--merge" }
    - node: Option_description
      children:
      - node: Description_node
        token: { type: LINE_OF_TEXT, value: "some option with long alernative without argument" }
      - node: Description_node
        token: { type: NEWLINE, value: "\n" }
  - node: Option_line
    children:
    - node: Option_short
      token: { type: SHORT, value: "-A" }
      children:
      - node: Option_argument
        token: { type: ARGUMENT, value: "ARG" }
    - node: Option_description
      children:
      - node: Description_node
        token: { type: LINE_OF_TEXT, value: "this option has not long alernative" }
      - node: Description_node
        token: { type: NEWLINE, value: "\n" }
  - node: Option_line
    children:
    - node: Option_short
      token: { type: SHORT, value: "-B" }
      children:
      - node: Option_argument
        token: { type: ARGUMENT, value: "BARG" }
    - node: Option_long
      token: { type: LONG, value: "--blong" }
      children:
      - node: Option_argument
        token: { type: ARGUMENT, value: "BARG" }
    - node: Option_description
      children:
      - node: Description_node
        token: { type: LINE_OF_TEXT, value: "this option has not long alernative" }
      - node: Description_node
        token: { type: NEWLINE, value: "\n" }
- node: Free_section

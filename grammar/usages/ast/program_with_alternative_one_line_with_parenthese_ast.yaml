---
node: Root
children:
- node: Prologue
  children:
  - node: Prologue_node
    token: { type: WORD, value: "AST" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "is" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "again" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "distinct" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "of" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "without" }
  - node: Prologue_node
    token: { type: BLANK, value: " " }
  - node: Prologue_node
    token: { type: WORD, value: "parentheses" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
  - node: Prologue_node
    token: { type: NEWLINE, value: "\n" }
- node: Usage_section
  children:
  - node: Usage
    token: { type: USAGE, value: "Usage:" }
  - node: Usage_line
    usage_line_input: "my_program ( run | jump | climb )"
    children:
    - node: Prog_name
      token: { type: PROG_NAME, value: "my_program" }
    - node: Usage_Expr
      children:
      - node: Usage_required_group
        children:
        - node: Usage_Expr
          children:
          - node: Usage_command
            token: { type: IDENT, value: "run" }
        - node: Usage_Expr
          children:
          - node: Usage_command
            token: { type: IDENT, value: "jump" }
        - node: Usage_Expr
          children:
          - node: Usage_command
            token: { type: IDENT, value: "climb" }
- node: Free_section
- node: Options_section
- node: Free_section
